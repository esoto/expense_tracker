# Recurring jobs configuration for Solid Queue
# These jobs run automatically on the specified schedules

default: &default
  # Calculate metrics for all email accounts every hour
  # This pre-warms the cache with fresh metrics data
  calculate_metrics_hourly:
    class: MetricsCalculationJob
    command: "MetricsCalculationJob.perform_later"
    queue: default
    priority: 5
    schedule: every hour at minute 5
    description: "Pre-calculate expense metrics for all active email accounts"

  # Clean up old finished jobs periodically  
  clear_solid_queue_finished_jobs:
    command: "SolidQueue::Job.clear_finished_in_batches(sleep_between_batches: 0.3)"
    schedule: every 6 hours at minute 30
    description: "Clean up completed Solid Queue jobs to prevent database bloat"

development:
  <<: *default
  # In development, run metrics calculation more frequently for testing
  calculate_metrics_hourly:
    class: MetricsCalculationJob
    command: "MetricsCalculationJob.perform_later"
    queue: default
    priority: 5
    schedule: every 30 minutes
    description: "Pre-calculate expense metrics for all active email accounts (dev mode)"
  
  # Warm pattern cache more frequently in development for testing
  warm_pattern_cache:
    class: PatternCacheWarmerJob
    command: "PatternCacheWarmerJob.perform_later"
    queue: low
    priority: 10
    schedule: every 5 minutes
    description: "Pre-warm pattern cache with frequently used patterns (dev mode)"

test:
  # No recurring jobs in test environment

production:
  <<: *default
  # Production uses default settings with hourly metric calculation
  
  # Warm the pattern cache every 15 minutes to ensure optimal performance
  # This keeps frequently used patterns in memory for < 1ms lookups
  warm_pattern_cache:
    class: PatternCacheWarmerJob
    command: "PatternCacheWarmerJob.perform_later"
    queue: low
    priority: 10
    schedule: every 15 minutes
    description: "Pre-warm pattern cache with frequently used patterns for optimal categorization performance"
