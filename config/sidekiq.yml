# Sidekiq configuration for ExpenseTracker broadcast reliability
# This configuration ensures proper queue prioritization and processing
# for ActionCable broadcast jobs with reliable message delivery.

# Production configuration
:concurrency: 10
:timeout: 25
:max_retries: 3

# Queue configuration with priorities
# Higher priority queues are processed first
:queues:
  - critical
  - high  
  - default
  - low

# Redis configuration
:redis:
  url: <%= ENV.fetch('REDIS_URL', 'redis://localhost:6379/0') %>
  network_timeout: 5
  pool_timeout: 5

# Queue weights for balanced processing
# Critical and high priority queues get more processing power
:queue_weights:
  critical: 8
  high: 4
  default: 2
  low: 1

# Scheduler configuration for periodic cleanup jobs
:scheduler:
  broadcast_analytics_cleanup:
    every: '1h'
    class: BroadcastAnalyticsCleanupJob
    
  failed_broadcast_recovery:
    every: '30m'
    class: FailedBroadcastRecoveryJob

# Dead job handling
:dead_timeout_in_seconds: 86400  # 24 hours
:dead_max_jobs: 10000

# Environment-specific settings
:environments:
  development:
    :concurrency: 5
    :timeout: 10
    
  test:
    :concurrency: 2
    :timeout: 5
    
  production:
    :concurrency: 25
    :timeout: 30
    :max_retries: 5